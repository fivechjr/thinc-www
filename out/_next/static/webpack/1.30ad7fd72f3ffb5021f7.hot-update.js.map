{"version":3,"file":"static/webpack/1.30ad7fd72f3ffb5021f7.hot-update.js","sources":["webpack:///./components/sections/members.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport fetch from 'isomorphic-unfetch'\n\nconst Profile = ({ avatarURL, profileURL, username }) => (\n    <>\n        <style jsx>{`\n            img {\n                width: 30px;\n                height: 30px;\n            }\n            #profile {\n                transition: 0.2s all cubic-bezier(0.165, 0.84, 0.44, 1);\n            }\n        `}</style>\n        <div className=\"inline-block m-2\">\n            <a\n                className=\"no-underline\"\n                alt={username}\n                title={username}\n                href={profileURL}\n                target=\"_blank\">\n                <div\n                    id=\"profile\"\n                    className=\"bg-gray-100 text-gray-600 hover:bg-gray-200 px-4 py-3 rounded-lg\">\n                    <div className=\"flex flex-row items-center\">\n                        <img className=\"rounded-full mr-4\" src={avatarURL} />\n                        <p className=\"text-sm\">\n                            <span className=\"opacity-25\">@ </span>\n                            {username}\n                        </p>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </>\n)\n\nconst Members = () => {\n    const [members, setMembers] = useState([])\n    useEffect(() => {\n        ;(async function fetchAPI() {\n            const data = await (await fetch(\n                `https://api.github.com/orgs/thinc-org/public_members`\n            )).json()\n            setMembers(data)\n        })()\n    }, [])\n    const renderProfiles = () => {\n        if (members.length === 0) {\n            return (\n                <p className=\"text-xs tracking-widest text-gray-600\">\n                    CHOTTO MATTE KUDASAI ~ {'<3'}\n                </p>\n            )\n        } else {\n            return (\n                <>\n                    {members.map((value, index) => {\n                        return (\n                            <Profile\n                                username={value.login}\n                                avatarURL={value.avatar_url}\n                                profileURL={value.html_url}\n                            />\n                        )\n                    })}\n                </>\n            )\n        }\n    }\n    return (\n        <section className=\"w-full bg-white py-20\">\n            <div className=\"container\">\n                <div className=\"mx-8\">\n                    <div className=\"w-full flex items-center flex-col\">\n                        <div className=\"w-full md:w-2/3 mb-20\">\n                            <p className=\"text-4xl text-center font-headline font-semibold leading-none text-black mb-10\">\n                                Members\n                            </p>\n                            <p className=\"text-base text-center font-normal leading-relaxed\">\n                                <span className=\"font-bold\">Thinc.</span> is community consisted of\n                                more than 100 members. All members displayed are public members from\n                                our GitHub organization.\n                            </p>\n                        </div>\n                        <div className=\"w-full flex justify-center\">\n                            <div className=\"inline-block text-center\">{renderProfiles()}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Members\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AACA;AAiCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}